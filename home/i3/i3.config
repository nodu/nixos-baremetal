# set $mod Mod4
set $mod Mod1

#----------------------------------------------------------------------
# Look & Feel
#----------------------------------------------------------------------
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Fira Code 14

# Window visuals
new_window pixel 4
new_float pixel 4
floating_minimum_size 400 x 300
floating_maximum_size -1 x -1
focus_follows_mouse no

# Fix boarders for chrome apps (qt)
for_window [class="^.*"] border pixel 4

# Reading colors from resources
# set_from_resource $bgcolor			i3wm.background #1D1F21
# set_from_resource $black		i3wm.color0		#282A2E
# set_from_resource $grey			i3wm.color8		#373B41
# set_from_resource $lightgrey	i3wm.color7		#707880
# set_from_resource $white		i3wm.color15	#C5C8C6
# set_from_resource $yellow		i3wm.color11	#F0C674
# set_from_resource $red			i3wm.color9		#CC6666
# set_from_resource $darkred		i3wm.color1		#A54242
# set_from_resource $green		i3wm.color10	#B5BD56

# Color shemes for windows
set $text       #ffffff
set $u-bgcolor  #ff0000
set $indicator  #191919
set $in-text    #191919E6
set $bgcolor    #ffffffE6
set $in-bgcolor #191919E6
set $bgcolor    #ffffff
set $in-bgcolor #1919190D
set $focused-ws #ffffffE6
set $in-focused-ws #130e17D9
set $bar-color  #130e17B3

client.focused          $bgcolor        $bgcolor        $text           $indicator
client.unfocused        $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.focused_inactive $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.urgent           $u-bgcolor      $u-bgcolor      $text           $u-bgcolor

#----------------------------------------------------------------------
# Startup
#----------------------------------------------------------------------
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.

## Setup xss-lock daemon

#Set timeout after 5 minutes of inactivity
exec_always --no-startup-id xset +dpms dpms 0 310 310
exec_always --no-startup-id xset s 280 300 #Also update toggle-screensaver.sh
exec_always --no-startup-id xss-lock -n /home/matt/.config/i3/notify-sleep.sh --transfer-sleep-lock -- /home/matt/.config/i3/scripts/lock
# exec --no-startup-id /usr/bin/gnome-screensaver

# No background
exec --no-startup-id xsetroot -solid "#1D1F21"

# Transparency with picom compositor
exec_always picom -f

#Background Images
exec_always feh --bg-fill $(find ~/repos/nixos-baremetal/home/wallpapers/ -name "*.*" | shuf -n1)

exec --no-startup-id nm-applet
# Moved to configuration.nix:
# exec --no-startup-id xinput set-prop "PIXA3854:00 093A:0274 Touchpad" "libinput Disable While Typing Enabled" 1

exec --no-startup-id blueman-applet &

#----------------------------------------------------------------------
# Keybindings
#----------------------------------------------------------------------
# Use Mouse+$mod to drag floating windows to their wanted position
# This is actually $mod + Ctrl + mouse
floating_modifier $mod

bindsym $mod+o exec rofi -show combi -calc-command "echo -n '{result}' | xclip -sel clip"
bindsym $mod+Tab exec rofi -show window
bindsym Mod4+Tab workspace back_and_forth

bindsym XF86AudioRaiseVolume exec "amixer set Master -q 5%+ unmute"
bindsym XF86AudioLowerVolume exec "amixer set Master -q 5%- unmute"
bindsym XF86AudioMute exec "amixer -q sset Master,0 toggle"

bindsym XF86AudioMedia exec spotify

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec brightnessctl s +10% # increase screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl s 10%- # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# start a terminal
bindsym $mod+n exec alacritty
bindsym $mod+d split h
bindsym $mod+Shift+d split v

# Run normcap
bindsym $mod+s exec normcap

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+F4 kill
#bindsym $mod+w kill window
bindsym $mod+q kill window

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle


# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+Shift+s layout stacking
# bindsym $mod+Shift+w layout tabbed
# bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating
bindsym $mod+Ctrl+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+Shift+f focus mode_toggle

# focus the parent/child container
bindsym $mod+a focus parent
bindsym $mod+c focus child


bindsym $mod+Shift+o exec thunar /host/matt/Downloads
# focus the child container
#bindsym $mod+Shift+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# Icons: https://fontawesome.com/cheatsheet/free/solid
set $ws1 "1: Home "
set $ws2 "2: Workspace "
set $ws3 "3: Overflow"
set $ws4 "4: Communication "
set $ws5 "5: Audio "
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# Force windows to open in specific workspaces:
# Use xprop to find the class name (use the 2nd one)
# xprop | grep -i 'class'
assign [class="Google-chrome" title="WhatsApp"] $ws4
assign [class="Google-chrome" title="Messages"] $ws4
assign [class="Google-chrome" title="FB Messenger"] $ws4
assign [class="Google-chrome" title="Gmail"] $ws4
assign [class="discord"] $ws6
assign [class="Spotify"] $ws5
for_window [class="Spotify"] move container to workspace $ws5
assign [class="steam"] $ws8
assign [class="obs"] $ws9
for_window [class="obs"] move container to workspace $ws9
assign [class="Google-chrome" title="ChatGPT"] $ws9

workspace $ws1 output DP-3 DP-2 eDP-1
workspace $ws2 output DP-3 DP-2 eDP-1
workspace $ws3 output DP-3 DP-2 eDP-1
workspace $ws4 output DP-3 DP-2 eDP-1
workspace $ws5 output eDP-1
workspace $ws6 output eDP-1
workspace $ws7 output DP-3 DP-2 eDP-1
workspace $ws8 output DP-3 DP-2 eDP-1
workspace $ws9 output DP-3 DP-2 eDP-1

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
#bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
#bindsym $mod+Shift+0 move container to workspace number $ws10


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# floating placement
set $screen-width 3440
set $screen-height 1440
set $width-by-3 1146
set $top-border 20
set $height-minus-border 1420
set $height-minus-border-by-2 710

bindsym $mod+y fullscreen disable; floating toggle; resize set $width-by-3 $height-minus-border; move window to position $width-by-3 25; sticky disable
bindsym $mod+Shift+y fullscreen disable; floating toggle; resize set 1911 $height-minus-border; move window to position 764 25; sticky disable
bindsym $mod+u fullscreen disable; floating enable; resize set $width-by-3 $height-minus-border-by-2; move window to position $width-by-3 25; sticky disable
bindsym $mod+t sticky toggle

bindsym $mod+Ctrl+1 move window to position 1 25
bindsym $mod+Ctrl+2 move window to position 1146 25
bindsym $mod+Ctrl+3 move window to position 2292 25
bindsym $mod+Ctrl+4 move window to position 1 735
bindsym $mod+Ctrl+5 move window to position 1146 735
bindsym $mod+Ctrl+6 move window to position 2292 735

#----------------------------------------------------------------------
# Resize Mode
#----------------------------------------------------------------------
set $mode_resize Resize / Move

# This mode will make it easier to resize and move workspaces without
# having to bind a bunch of obscure bindings.
mode "$mode_resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Focus parent and child
        bindsym a focus parent
        bindsym $mod+a focus parent
        bindsym c focus child
        bindsym $mod+c focus child

        # Move containers
        bindsym 1 move container to workspace number $ws1; workspace number $ws1
        bindsym 2 move container to workspace number $ws2; workspace number $ws2
        bindsym 3 move container to workspace number $ws3; workspace number $ws3
        bindsym 4 move container to workspace number $ws4; workspace number $ws4
        bindsym 5 move container to workspace number $ws5; workspace number $ws5
        bindsym 6 move container to workspace number $ws6; workspace number $ws6
        bindsym 7 move container to workspace number $ws7; workspace number $ws7
        bindsym 8 move container to workspace number $ws8; workspace number $ws8
        bindsym 9 move container to workspace number $ws9; workspace number $ws9
        bindsym 0 move container to workspace number $ws10; workspace number $ws10

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "$mode_resize"

#----------------------------------------------------------------------
# System Mode
#----------------------------------------------------------------------
set $mode_system System (e) logout, (s) suspend, (Ctrl+r) reboot, (Ctrl+s) shutdown, (l) lock

mode "$mode_system" {
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym Ctrl+r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Ctrl+s exec --no-startup-id systemctl poweroff, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym l exec --no-startup-id /home/matt/.config/i3/scripts/lock, mode "default"
    # bindsym l exec --no-startup-id loginctl lock-session, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+BackSpace mode "default"
}
bindsym $mod+BackSpace mode "$mode_system"


set $mode_print Screenshot: n: normcap, s: selection (clip), (w) window (Clip), (f) fullscreen (clip) / (ctrl+s) selection, (ctrl+w) window, (ctrl+f) fullscreen

mode "$mode_print" {
## Screenshots in clipboards
    bindsym n exec --no-startup-id normcap, mode "default"
    bindsym s exec --no-startup-id maim --format=png --select | xclip -selection clipboard -t image/png, mode "default"
    bindsym w exec --no-startup-id maim --format=png --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png, mode "default"
    bindsym f exec --no-startup-id maim --format=png | xclip -selection clipboard -t image/png, mode "default"

##  Screenshots in files
    bindsym Ctrl+s exec --no-startup-id maim --format=png --select "/home/$USER/Pictures/Screenshots/screenshot-$(date -u +'%Y%m%d-%H%M%SZ')-selected.png", mode "default"
    bindsym Ctrl+w exec --no-startup-id maim --format=png --window $(xdotool getactivewindow) "/home/$USER/Pictures/Screenshots/screenshot-$(date -u +'%Y%m%d-%H%M%SZ')-current.png", mode "default"
    bindsym Ctrl+f exec --no-startup-id maim --format=png "/home/$USER/Pictures/Screenshots/screenshot-$(date -u +'%Y%m%d-%H%M%SZ')-all.png", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Shift+s mode "default"
}
bindsym Print mode "$mode_print"
bindsym $mod+Shift+s mode "$mode_print"

# Get Monitor names:
# xrandr --query
set $mode_display Ext Screen (a) Above, (m) Mirror, (s) Toggle DPMS/Screensaver (d) disable external
mode "$mode_display" {
    bindsym a exec --no-startup-id "~/.config/i3/monitor-above.sh", mode "default"
    bindsym m exec --no-startup-id "~/.config/i3/monitor-mirror.sh", mode "default"
    bindsym s exec --no-startup-id "~/.config/i3/toggle-screensaver.sh", mode "default"
    bindsym d exec --no-startup-id "~/.config/i3/monitor-disable.sh", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+x mode "default"
}
bindsym $mod+x mode "$mode_display"


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    i3bar_command i3bar --transparency
    position top
    status_command i3blocks -c /home/$USER/.config/i3/i3blocks.conf
    # status_command 2>/tmp/i3blocks.err i3blocks -vvv -c /home/$USER/.config/i3/i3blocks.conf | tee /tmp/i3blocks.out
    # tail -f /tmp/i3blocks.err
    tray_output primary

    font pango:Fira Code 12
    colors {
        background $bar-color
        separator #191919
        focused_workspace $focused-ws $focused-ws $in-text
        inactive_workspace $in-focused-ws $in-focused-ws $text
        urgent_workspace $u-bgcolor $u-bgcolor $text
    }
}

# default gaps
gaps inner 7
gaps outer 5
smart_gaps on

# gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
set $mouseMover Mouse movement : quit (c)     move far (hjkl)     move close (hjkl+shift/v)        click (i) click&exit(spacebar/enter)   right click (shift+spacebar / I)       scrollUp/Down (o/p)

# bindsym $mod+m exec togglemute-inputs

#Mouse!
bindsym $mod+m mode "$mouseMover"
mode "$mouseMover" {
  bindsym c mode "default"
  bindsym Escape mode "default"

  bindsym space exec xdotool click 1 ; mode "default"
  bindsym enter exec xdotool click 1 ; mode "default"
  bindsym i exec xdotool click 1

  bindsym shift+space exec xdotool click 3
  bindsym shift+i exec xdotool click 3

  bindsym o exec xdotool click 4
  bindsym p exec xdotool click 5

  bindsym h exec xdotool mousemove_relative -- -200 0
  bindsym j exec xdotool mousemove_relative 0 200
  bindsym k exec xdotool mousemove_relative 0 -200
  bindsym l exec xdotool mousemove_relative 200 0

  bindsym shift+h exec xdotool mousemove_relative -- -25 0
  bindsym shift+j exec xdotool mousemove_relative 0 25
  bindsym shift+k exec xdotool mousemove_relative 0 -25
  bindsym shift+l exec xdotool mousemove_relative 25 0
  bindsym v+h exec xdotool mousemove_relative -- -25 0
  bindsym v+j exec xdotool mousemove_relative 0 25
  bindsym v+k exec xdotool mousemove_relative 0 -25
  bindsym v+l exec xdotool mousemove_relative 25 0
}

